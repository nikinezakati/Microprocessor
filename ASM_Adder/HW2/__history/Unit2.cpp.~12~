//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit2.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm2 *Form2;
//---------------------------------------------------------------------------
__fastcall TForm2::TForm2(TComponent* Owner)
	: TForm(Owner)
{
	Sum() ;
}
//---------------------------------------------------------------------------

void TForm2::Sum(void)
{
   BYTE ARR1[] = {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x0F},
   ARR2[] = {0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01}; //unsigned__bit 16

   UnicodeString comment=L"" ;
   Memo1->Lines[0].Text = L"Numbers:" ;
   comment.cat_sprintf(L"NUM1: %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH",
		ARR1[0], ARR1[1], ARR1[2], ARR1[3], ARR1[4], ARR1[5], ARR1[6], ARR1[7], ARR1[8], ARR1[9]) ;
   Memo1->Lines->Append(comment) ;
   comment = UnicodeString().sprintf(L"NUM2: %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH",
		ARR2[0], ARR2[1], ARR2[2], ARR2[3], ARR2[4], ARR2[5], ARR2[6], ARR2[7], ARR2[8], ARR2[9]) ;
   Memo1->Lines->Append(comment) ;
   asm{
		lea esi, ARR1
		add esi, 9
		lea edi, ARR2
		add edi, 9
		xor ax, ax
		mov ecx, 00000009H
		mov ah, [esi]
		add ah, [edi]
		mov [edi], ah
L1:
		dec esi
		dec edi
		mov al, [esi]
		adc al, [edi]
		mov [edi], al
		;;dec cx
		;;jnz L1
		loopnz L1
   } ;
   Memo1->Lines->Append(L"Sum:");

   comment = UnicodeString().sprintf(L"%xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH, %xH",
		ARR2[0], ARR2[1], ARR2[2], ARR2[3], ARR2[4], ARR2[5], ARR2[6], ARR2[7], ARR2[8], ARR2[9]);
   Memo1->Lines->Append(comment);



}
